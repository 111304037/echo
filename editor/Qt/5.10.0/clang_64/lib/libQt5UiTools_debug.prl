
QMAKE_PRO_INPUT = uitools.pro
QMAKE_PRL_TARGET = libQt5UiTools_debug.a
QMAKE_PRL_CONFIG = lex yacc debug depend_includepath testcase_targets import_qpa_plugin asset_catalogs rez qt_build_extra file_copies qmake_use qt warn_on link_prl app_bundle incremental global_init_link_order lib_version_first sdk clang_pch_style qt_framework macos osx macx mac darwin unix posix gcc clang llvm sse2 aesni sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vl compile_examples f16c largefile precompile_header rdrnd shani prefix_build force_independent utf8_source create_prl link_prl prepare_docs qt_docs_targets no_private_qt_headers_warning QTDIR_build qt_example_installs exceptions_off testcase_exceptions explicitlib testcase_no_bundle debug DebugBuild Debug build_pass debug DebugBuild Debug build_pass static relative_qt_rpath app_extension_api_only git_build qmake_cache target_qt c++11 strict_c++ c++14 c++1z hide_symbols separate_debug_info qt_install_headers need_fwd_pri qt_install_module debug_and_release build_all create_cmake compiler_supports_fpmath create_pc create_libtool debug DebugBuild Debug build_pass have_target staticlib no_plist exclusive_builds debug_info objective_c no_autoqmake thread uic opengl moc resources designer_defines uic opengl moc resources
QMAKE_PRL_VERSION = 5.10.0
QMAKE_PRL_LIBS = -F/Users/ares/Qt/5.10.0/clang_64/lib -F$$[QT_INSTALL_LIBS] -framework QtWidgets -framework QtGui -framework QtCore -framework DiskArbitration -framework IOKit -framework QtWidgets -F/Users/ares/Qt/5.10.0/clang_64/lib -framework QtGui -framework QtCore -framework DiskArbitration -framework IOKit -framework OpenGL -framework AGL
