# 配置
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
#SET(CMAKE_AUTOMOC On)

# VS配置 http://www.oschina.net/code/explore/mariadb-5.2.4/CMakeLists.txt
IF(MSVC)
	# 禁用特定警告,开启多核编译
	SET(CMAKE_CXX_FLAGS_DEBUG			"${CMAKE_CXX_FLAGS_DEBUG} /wd4996 /wd4819 /MP")
    SET(CMAKE_CXX_FLAGS_RELEASE			"${CMAKE_CXX_FLAGS_RELEASE} /wd4996 /wd4819 /MP")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO	"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /wd4996 /wd4819  /MP")
    SET(CMAKE_C_FLAGS_DEBUG				"${CMAKE_C_FLAGS_DEBUG} /wd4996 /wd4819  /MP")
    SET(CMAKE_C_FLAGS_RELEASE			"${CMAKE_C_FLAGS_RELEASE} /wd4996 /wd4819  /MP")
    SET(CMAKE_C_FLAGS_RELWITHDEBINFO	"${CMAKE_C_FLAGS_RELWITHDEBINFO} /wd4996 /wd4819  /MP")
ENDIF(MSVC)

# 
CMAKE_POLICY(SET CMP0020 OLD)

# 库依赖

# 附加包含目录
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${LORD_SRC_PATH})
INCLUDE_DIRECTORIES(${LORD_ROOT_PATH}/Dependencies/MicrosoftDirectXSDK_June2010/Include)
INCLUDE_DIRECTORIES(${LORD_ROOT_PATH}/Src/Foundation/ThirdParty/Zlib)

# 附加库目录
LINK_DIRECTORIES(${CMAKE_RUNTIME_OUTPUT_DIRECTORY})

# 因未找到对应的宏定义来区分x86与x64,此处使用VOID*大小来区分x86与x64
IF(CMAKE_SIZEOF_VOID_P EQUAL 4)
	LINK_DIRECTORIES(${LORD_ROOT_PATH}/Dependencies/MicrosoftDirectXSDK_June2010/Lib/x86)
ELSEIF(CMAKE_SIZEOF_VOID_P EQUAL 8)
	LINK_DIRECTORIES(${LORD_ROOT_PATH}/Dependencies/MicrosoftDirectXSDK_June2010/Lib/x64)
ENDIF()
	
# 设置模块名称
SET(MODULE_NAME Lightmass)

# 预定义宏
ADD_DEFINITIONS()

# 源文件路径
SET(MODULE_PATH        ${LORD_ROOT_PATH}/Src/Tools/${MODULE_NAME})
SET(MODULE_HEADER_PATH ${LORD_ROOT_PATH}/Src/Tools/${MODULE_NAME})
SET(MODULE_SOURCE_PATH ${LORD_ROOT_PATH}/Src/Tools/${MODULE_NAME})

# 附加包含目录
INCLUDE_DIRECTORIES(${MODULE_PATH}/Inc ${MODULE_PATH}/Lighting ${MODULE_PATH}/LightmassCore/Inc ${MODULE_PATH}/Lord ${MODULE_PATH}/Public)

# 递归查找文件
FILE(GLOB_RECURSE HEADER_FILES ${MODULE_HEADER_PATH}/*.h)
FILE(GLOB_RECURSE SOURCE_FILES ${MODULE_SOURCE_PATH}/*.c ${MODULE_SOURCE_PATH}/*.cpp)
GROUP_FILES(HEADER_FILES ${MODULE_HEADER_PATH})
GROUP_FILES(SOURCE_FILES ${MODULE_SOURCE_PATH})

#--------------Begin ZLib---------------
SET(ZLIB_HEADER_PATH ${LORD_SRC_PATH}/Foundation/ThirdParty/zlib)
SET(ZLIB_SOURTH_PATH ${LORD_SRC_PATH}/Foundation/ThirdParty/zlib)

#IF(LORD_BUILD_PLATFORM_HTML5)
IF(TRUE)
	SET(ZLIB_HEAD_FILES
		${ZLIB_HEADER_PATH}/zconf.h
		${ZLIB_HEADER_PATH}/zlib.h
		${ZLIB_HEADER_PATH}/crc32.h
		${ZLIB_HEADER_PATH}/deflate.h
		${ZLIB_HEADER_PATH}/gzguts.h
		${ZLIB_HEADER_PATH}/inffast.h
		${ZLIB_HEADER_PATH}/inffixed.h
		${ZLIB_HEADER_PATH}/inflate.h
		${ZLIB_HEADER_PATH}/inftrees.h
		${ZLIB_HEADER_PATH}/trees.h
		${ZLIB_HEADER_PATH}/zutil.h
		)
		
	SET(ZLIB_SOURCE_FILES
		${ZLIB_SOURTH_PATH}/adler32.c
		${ZLIB_SOURTH_PATH}/compress.c
		${ZLIB_SOURTH_PATH}/crc32.c
		${ZLIB_SOURTH_PATH}/deflate.c
		${ZLIB_SOURTH_PATH}/gzclose.c
		${ZLIB_SOURTH_PATH}/gzlib.c
		${ZLIB_SOURTH_PATH}/gzread.c
		${ZLIB_SOURTH_PATH}/gzwrite.c
		${ZLIB_SOURTH_PATH}/inflate.c
		${ZLIB_SOURTH_PATH}/infback.c
		${ZLIB_SOURTH_PATH}/inftrees.c
		${ZLIB_SOURTH_PATH}/inffast.c
		${ZLIB_SOURTH_PATH}/trees.c
		${ZLIB_SOURTH_PATH}/uncompr.c
		${ZLIB_SOURTH_PATH}/zutil.c
	)
	
	SET(ZLIB_FILES ${ZLIB_HEADER_FILES} ${ZLIB_SOURCE_FILES})

	# 分组
	GROUP_FILES(ZLIB_FILES	${LORD_SRC_PATH}/Foundation)
	
ENDIF()

# 添加执行程序
ADD_EXECUTABLE(${MODULE_NAME}
	${HEADER_FILES}
	${SOURCE_FILES}
	${ZLIB_FILES}
	CMakeLists.txt)

# 链接库
TARGET_LINK_LIBRARIES(${MODULE_NAME} dbghelp.lib Psapi.lib)

# 设置属性
SET_TARGET_PROPERTIES(${MODULE_NAME} PROPERTIES FOLDER "Tools")

IF(MSVC)
	# 设置为窗口模式
	#SET_TARGET_PROPERTIES(${MODULE_NAME} PROPERTIES LINK_FLAGS_RELEASE "/SUBSYSTEM:WINDOWS /entry:mainCRTStartup")
ENDIF(MSVC)