# Set Module Name
SET(MODULE_NAME recast)

# message
MESSAGE( STATUS "Configuring module: ${MODULE_NAME} ...")

# 包含目录
INCLUDE_DIRECTORIES( ${ECHO_SRC_PATH})
INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/Detour)
INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/DetourCrowd)
INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/DetourTileCache)
INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/Recast)

# 链接库目录
LINK_DIRECTORIES(${CMAKE_LIBRARY_OUTPUT_DIRECTORY})

# 包含文件
FILE( GLOB_RECURSE HEADER_FILES *.h *.inl)
FILE( GLOB_RECURSE SOURCE_FILES *.c *.cpp *.mm)

SET(ALL_FILES ${HEADER_FILES} ${SOURCE_FILES})

# 分组
GROUP_FILES(ALL_FILES ${CMAKE_CURRENT_SOURCE_DIR})

IF(ECHO_UNICODE)
	ADD_DEFINITIONS("-DUNICODE -D_UNICODE")
ENDIF()

# 生成库
ADD_LIBRARY(${MODULE_NAME} ${ALL_FILES} CMakeLists.txt)

# 设置目录
SET_TARGET_PROPERTIES(${MODULE_NAME} PROPERTIES FOLDER "thirdparty")

# ??????
MESSAGE(STATUS "Configure success!")
