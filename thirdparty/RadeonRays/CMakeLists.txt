MESSAGE(STATUS "configuring module: radeonrays...")

# Include Directories
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${ECHO_SRC_PATH})

IF(${ECHO_PLATFORM_WIN32})
	INCLUDE_DIRECTORIES(${ECHO_ROOT_PATH}/thirdparty/opencl/windows/include)
ENDIF()

# link directories
LINK_DIRECTORIES(${CMAKE_LIBRARY_OUTPUT_DIRECTORY})

# set project path
SET(MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})

# Add Definitions
ADD_DEFINITIONS(-DRR_STATIC_LIBRARY)
ADD_DEFINITIONS(-DUSE_OPENCL)
ADD_DEFINITIONS(-DCALC_STATIC_LIBRARY)

# rescursive get all files
FILE(GLOB_RECURSE ALL_FILES ${MODULE_PATH}/*.h ${MODULE_PATH}/*.inl ${MODULE_PATH}/*.cpp ${MODULE_PATH}/*.mm ${MODULE_PATH}/*.c)

# group files
GROUP_FILES(ALL_FILES ${CMAKE_CURRENT_SOURCE_DIR})

# set module name
SET(MODULE_NAME radeonrays)

# add library
ADD_LIBRARY(${MODULE_NAME} STATIC ${ALL_FILES} CMakeLists.txt)

# set folder
SET_TARGET_PROPERTIES(${MODULE_NAME} PROPERTIES FOLDER "thirdparty")

MESSAGE(STATUS "radeonrays configure success!")