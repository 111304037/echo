MESSAGE( STATUS "Configuring module: app ...")

SET(MODULE_NAME Examples)

# 模块路径设置
SET(MODULE_SOURCE_PATH ${LORD_SRC_PATH}/Examples)

# 包含目录
INCLUDE_DIRECTORIES(${LORD_SRC_PATH})
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Cegui/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Foundation)
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Foundation/ThirdParty)
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Foundation/pfs)
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Foundation/Memory)
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Foundation/luaUtil/lua)
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Foundation/luaUtil/lua/src)
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Foundation/luaUtil/tolua)
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Foundation/ThirdParty/Rapidxml)
INCLUDE_DIRECTORIES(${LORD_SRC_PATH}/Foundation/ThirdParty/FreeImage)
INCLUDE_DIRECTORIES(${LORD_DEP_PATH}/ffmpeg/include)
INCLUDE_DIRECTORIES(${LORD_DEP_PATH}/Fmod/Win32/Include)

# 包含库目�?
LINK_DIRECTORIES(${CMAKE_LIBRARY_OUTPUT_DIRECTORY})

IF(LORD_BUILD_PLATFORM_IOS)
	LINK_DIRECTORIES(${LORD_DEP_PATH}/Fmod/IOS/Lib)
	LINK_DIRECTORIES(${LORD_DEP_PATH}/PhysX-3.3/PhysXSDK/Lib/iOS)
ENDIF()

IF(LORD_BUILD_PLATFORM_ANDROID)
	LINK_DIRECTORIES(${LORD_DEP_PATH}/Fmod/Android/Lib)
ELSE()
	LINK_DIRECTORIES(${LORD_DEP_PATH}/PhysX-3.3/PhysXSDK/Lib/vc12win32)
	LINK_DIRECTORIES(${LORD_DEP_PATH}/Fmod/Win32/Lib)
	LINK_DIRECTORIES(${LORD_DEP_PATH}/libevent-2.0.21-stable)
	IF(CMAKE_SIZEOF_VOID_P EQUAL 4)
		LINK_DIRECTORIES(${LORD_DEP_PATH}/AdrenoSDK/Lib/Win32)
		LINK_DIRECTORIES(${LORD_DEP_PATH}/fbx_sdk/lib/vs2013/x86/${CMAKE_BUILD_TYPE})
	ELSEIF(CMAKE_SIZEOF_VOID_P EQUAL 8)
		LINK_DIRECTORIES(${LORD_DEP_PATH}/AdrenoSDK/Lib/x64)
		LINK_DIRECTORIES(${LORD_DEP_PATH}/fbx_sdk/lib/vs2013/x64/${CMAKE_BUILD_TYPE})
	ENDIF()
ENDIF()

IF(${LORD_PLATFORM_WIN32})
	ADD_DEFINITIONS("-D_SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS")
ENDIF()

# AddFrameWork 宏定�?
MACRO(ADD_FRAMEWORK fwname)
	SET(FRAMEWORKS "${FRAMEWORKS} -framework ${fwname}")
ENDMACRO(ADD_FRAMEWORK)

# 递归获取所有c++文件
FILE(GLOB HEADER_FILES Frame/*.h Frame/Platform/*.inl)
FILE(GLOB SOURCE_FILES Frame/*.cpp)

FILE(GLOB_RECURSE HEADER_FILES ${HEADER_FILES} Render/*.h Foundation/*.h)
FILE(GLOB_RECURSE SOURCE_FILES ${SOURCE_FILES} Render/*.cpp Foundation/*.cpp)

IF(LORD_BUILD_PLATFORM_IOS)
	FILE(GLOB_RECURSE HEADER_FILES ${HEADER_FILES} Frame/Platform/iOS/*.h)
	FILE(GLOB_RECURSE SOURCE_FILES ${SOURCE_FILES} Frame/Platform/iOS/*.c Frame/Platform/iOS/*.cpp Frame/Platform/iOS/*.m Frame/Platform/iOS/*.mm)
ENDIF()

IF(LORD_BUILD_PLATFORM_ANDROID)
	FILE(GLOB_RECURSE HEADER_FILES ${HEADER_FILES} Frame/Platform/Android/*.h)
	FILE(GLOB_RECURSE HEADER_FILES ${HEADER_FILES} Frame/Platform/Android/*.c Frame/Platform/Android/*.cpp)
ENDIF()
SET(ALL_FILES ${HEADER_FILES} ${SOURCE_FILES})

# iOS平台资源
IF(LORD_BUILD_PLATFORM_IOS)
	SET(IOS_RESOURCE_FILES
		${MODULE_SOURCE_PATH}/Frame/Platform/iOS/Icon.png
		${MODULE_SOURCE_PATH}/Frame/Platform/iOS/launch.png
		${LORD_ROOT_PATH}/Bin/media
		${LORD_ROOT_PATH}/Bin/Debug/assets
	)

	#SOURCE_GROUP("Resources" FILES ${IOS_RESOURCE_FILES})
ENDIF()
#/
SET_SOURCE_FILES_PROPERTIES(${IOS_RESOURCE_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)

# 分组
GROUP_FILES(ALL_FILES ${CMAKE_CURRENT_SOURCE_DIR})

IF(LORD_UNICODE)
	ADD_DEFINITIONS("-DUNICODE -D_UNICODE")
ENDIF()

IF(MSVC)
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINER_FLAGS} /SAFESEH:NO")
SET(CMAKE_EXE_LINKER_FLAGS_VERSION "${CMAKE_EXE_LINER_FLAGS} /SAFESEH:NO")
	# 新建�?
	ADD_EXECUTABLE(Examples ${HEADER_FILES} ${SOURCE_FILES} CMakeLists.txt)

	# 链接�?
	TARGET_LINK_LIBRARIES(Examples freetype Foundation Render Engine EngineEx GLES2Render CEGUI luaex luaUtil libevent 7zip recast winmm.lib imm32.lib d3d9.lib d3d11.lib dxgi.lib d3dcompiler.lib dxguid.lib Shlwapi.lib libfbxsdk.lib)
	IF(CMAKE_SIZEOF_VOID_P EQUAL 4)
		TARGET_LINK_LIBRARIES(${MODULE_NAME} fmod_vc.lib fmodstudio_vc.lib)
	ELSEIF(CMAKE_SIZEOF_VOID_P EQUAL 8)
		TARGET_LINK_LIBRARIES(${MODULE_NAME} fmod64_vc.lib fmodstudio64_vc.lib)
	ENDIF()
	TARGET_LINK_LIBRARIES(Examples debug libEGL_d.lib       optimized libEGL.lib)
	TARGET_LINK_LIBRARIES(Examples debug libGLESv2_d.lib    optimized libGLESv2.lib)
	
	# 性能分析服务
	IF(LORD_PROFILER)
		TARGET_LINK_LIBRARIES(Examples libevent network protobuf-lite ws2_32.lib)
	ENDIF()
  
	# 设置目标属�?
	SET_TARGET_PROPERTIES(Examples PROPERTIES FOLDER "Examples")


	# 设置为窗口模�?
	SET_TARGET_PROPERTIES(Examples PROPERTIES LINK_FLAGS "/SUBSYSTEM:WINDOWS /entry:mainCRTStartup /debug")
ELSEIF(LORD_BUILD_PLATFORM_ANDROID)
  MESSAGE( STATUS "Configuring module: Example.NativeActivity...")
	ADD_SUBDIRECTORY(Frame/Platform/Android/Example.NativeActivity)
	ADD_SUBDIRECTORY(Frame/Platform/Android/Example.Packaging)
ENDIF()

IF(LORD_BUILD_PLATFORM_IOS)
	# 链接�?
	ADD_FRAMEWORK(MediaPlayer)
	ADD_FRAMEWORK(AudioToolbox)
	ADD_FRAMEWORK(CoreGraphics)
	ADD_FRAMEWORK(QuartzCore)
	ADD_FRAMEWORK(UIKit)
	ADD_FRAMEWORK(GLKit)
	ADD_FRAMEWORK(OpenGLES)
	ADD_FRAMEWORK(OpenAL)
	ADD_FRAMEWORK(CFNetwork)
	ADD_FRAMEWORK(MobileCoreServices)
	ADD_FRAMEWORK(SystemConfiguration)
	ADD_FRAMEWORK(AVFoundation)
	ADD_FRAMEWORK(AdSupport)
	ADD_FRAMEWORK(CoreFoundation)
	ADD_FRAMEWORK(CoreTelephony)
	ADD_FRAMEWORK(CoreText)
	ADD_FRAMEWORK(iAd)

	ADD_FRAMEWORK(StoreKit)
	ADD_FRAMEWORK(CoreData)
	ADD_FRAMEWORK(CoreMedia)
	ADD_FRAMEWORK(CoreMotion)
	ADD_FRAMEWORK(Security)

	#IF(LORD_PHYSICS_HAVOK)
	#ENDIF()

	SET(FRAMEWORKS "${FRAMEWORKS} -ObjC")
	SET(CMAKE_EXE_LINKER_FLAGS ${FRAMEWORKS})
	SET(CMAKE_OSX_ARCHITECTURES "${ARCHS_STANDARD}")

	ADD_EXECUTABLE(Examples MACOSX_BUNDLE ${HEADER_FILES} ${SOURCE_FILES} ${IOS_RESOURCE_FILES} CMakeLists.txt)

	# 链接�?
	TARGET_LINK_LIBRARIES(Examples Foundation Render Engine EngineEx GLES2Render UI libfmod_iphoneos.a libfmodstudio_iphoneos.a z.1.2.5 iconv)

	SET_TARGET_PROPERTIES(Examples PROPERTIES MACOSX_BUNDLE_INFO_PLIST ${MODULE_SOURCE_PATH}/Frame/Platform/iOS/Info.plist)
	SET_TARGET_PROPERTIES(Examples PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY[variant=Debug] "iPhone Developer:shuo zhang (KMY668K2JS)")
	SET_TARGET_PROPERTIES(Examples PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY[variant=Release] "iPhone Developer:shuo zhang (KMY668K2JS)")
	SET_TARGET_PROPERTIES(Examples PROPERTIES XCODE_ATTRIBUTE_PROVISIONING_PROFILE[variant=Debug] "bb1c4acc-2111-4504-a4eb-1a4ac4f26924")
	SET_TARGET_PROPERTIES(Examples PROPERTIES XCODE_ATTRIBUTE_PROVISIONING_PROFILE[variant=Release] "bb1c4acc-2111-4504-a4eb-1a4ac4f26924")
	SET_TARGET_PROPERTIES(Examples PROPERTIES XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++14")
	SET_TARGET_PROPERTIES(Examples PROPERTIES XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2")
	SET_TARGET_PROPERTIES(Examples PROPERTIES XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "launch")
ENDIF()

# HTML5平台
IF(LORD_PLATFORM_HTML5)
	# 执行程序
	ADD_EXECUTABLE(Examples ${HEADER_FILES} ${SOURCE_FILES} CMakeLists.txt)
	
	# 链接库
	TARGET_LINK_LIBRARIES(Examples Foundation Engine EngineEx GLES2Render UI Render luaUtil libevent)
	
	# 设置目标属性
	SET_TARGET_PROPERTIES(Examples PROPERTIES FOLDER "Examples")
ENDIF()

# 提示信息
MESSAGE(STATUS "Configure Examples success!")
