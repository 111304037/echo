#version 100

uniform sampler2D texSampler;
//uniform sampler2D texMaskSampler;

uniform mediump vec4 naturalColor;
// uniform mediump vec3 litDir;
// uniform mediump vec4 litColor;
// uniform mediump vec4 ambtColor;
uniform mediump vec4 edgeColor;
uniform mediump vec4 colorParams;
uniform mediump vec3 camPos;
uniform mediump vec4 litParam[3];

varying mediump vec2 texCoord;
varying mediump vec4 worldPosition;
varying mediump vec3 worldNormal;

void main(void)
{
	mediump vec4 textureColor = texture2D(texSampler, texCoord);

	mediump vec3 Normal = normalize(worldNormal);

	mediump float diffuseLight = max(dot(litParam[0].xyz, Normal), 0.0);
	mediump vec4 diffuse = vec4((litParam[1].rgb * diffuseLight + litParam[2].rgb + naturalColor.rgb), naturalColor.a);
	
	// diffuse
	gl_FragColor = textureColor*diffuse;
	
	//specular
 	mediump vec3 viewDir = normalize(camPos - worldPosition.xyz);
	
	//rim
	mediump float cosView = dot(viewDir, Normal);
	mediump float shineEdge = pow(1.0 - cosView*cosView, colorParams.y*128.0);

	mediump float factor = 1.0;
	if ( naturalColor.a < 1.0 )
		factor = 0.0;
	gl_FragColor += max(shineEdge * edgeColor * factor, 0.0);
}