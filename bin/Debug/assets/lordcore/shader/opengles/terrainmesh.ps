#version 100
precision mediump float;
#include <tonemapping.inc>
#include <fog_ps.inc>
#include <hdr_ldr.inc>


uniform mediump vec4 LMParam[2];
uniform highp vec4 textureSize;
uniform sampler2D texSampler;
uniform sampler2D texSampler1;
uniform sampler2D texSampler2;
uniform sampler2D texSampler3;
uniform sampler2D LMSampler;

#ifdef FILTER_COLOR
uniform mediump vec4 filterColor;
uniform mediump float filterGray;
#endif

varying mediump vec4 blendines;
varying mediump vec4 ofogColor;
varying mediump vec2 texCoord;
varying mediump vec2 texCoord1;


void main(void)
{
	mediump vec3 LMColor = texture2d_linear(LMSampler, texCoord1.xy*LMParam[0].zw+LMParam[0].xy).rgb  * LMParam[1].xyz;
	mediump vec4 finalColor;
	finalColor  = texture2d_linear(texSampler,  texCoord/textureSize.x) * (1.0 - blendines.r - blendines.g - blendines.b);
	finalColor += texture2d_linear(texSampler1, texCoord/textureSize.y) * blendines.r;
	finalColor += texture2d_linear(texSampler2, texCoord/textureSize.z) * blendines.g;
	finalColor += texture2d_linear(texSampler3, texCoord/textureSize.w) * blendines.b;
	finalColor.xyz *= LMColor;

	gl_FragColor = vec4(mix(ofogColor.rgb, finalColor.rgb, ofogColor.a), 1.0);
	gl_FragColor.rgb = mix(gl_FragColor.rgb, varHeightFog.rgb, ComputeHeightFog(varHeightFog.a));

#ifdef FILTER_COLOR
	mediump float gray = rgb_to_gray(gl_FragColor.r, gl_FragColor.g, gl_FragColor.b);
	mediump vec3 vec_gray = vec3(gray, gray, gray);
	gl_FragColor = vec4(mix(gl_FragColor.rgb, vec_gray, filterGray), gl_FragColor.a) * filterColor;
#endif
	
	gl_FragColor = hdr2ldr(gl_FragColor);
}