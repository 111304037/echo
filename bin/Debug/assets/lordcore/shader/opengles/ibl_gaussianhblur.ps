#version 100
precision highp float;

uniform sampler2D texSampler;
uniform vec2  texelSize;
uniform float sigma;

varying vec2 texCoord;

#define saturate(x) clamp(x, 0.0, 1.0)

float ComputeGaussianValue(float x,float sigma)
{
	return (1.0 / sqrt(2.0 * 3.141592653589793 * sigma * sigma)) * exp(-x * x  / (2.0 * sigma * sigma));
}

void main(void)
{
	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);
	
	int r = int(sigma*3.0 + 0.5);
	for( int i = -r; i <= r; i++ )
	{
		float weight = saturate(ComputeGaussianValue(float(i),sigma));
		color += texture2D( texSampler, texCoord + vec2(0.0,float(i)* texelSize.y)) * weight;
	}
	
	vec3 v = (1.0/7.0)*color.xyz;
	float m = saturate( max( v.x, max( v.y, v.z ) ) );
	m = ceil( m * 255.0 ) / 255.0;
	if( m > 0.0 )
	{ 
		color.xyz = v.xyz / m;
	}
	color.w = m;
	
	gl_FragColor = color;
}