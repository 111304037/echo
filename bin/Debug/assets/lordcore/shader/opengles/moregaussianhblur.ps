#version 100

uniform sampler2D texSampler;

uniform mediump vec2 RTSize;

uniform mediump float mean;
uniform mediump float dev;
uniform mediump float multiplier;
uniform mediump float bright;


varying mediump vec2 texCoord;

mediump float ComputeGaussianValue(mediump float x, mediump float mean, mediump float deviation)
{
	return (1.0 / sqrt(2.0 * 3.141592653589793 * deviation * deviation)) * exp(-(x - mean) * (x - mean) / (2.0 * deviation * deviation));
}

void main(void)
{
	mediump vec4 color = vec4(0.0, 0.0, 0.0, 0.0);
	
	for( int i = 0; i < 13; i++ )
	{
		mediump float v = (float(i)-6.0) / 6.0;
		mediump float weight = multiplier * ComputeGaussianValue(v, mean, dev);
		color += texture2D( texSampler, texCoord + vec2( (float(i)-6.0) / RTSize.x, 0)) * weight;
	}
	
	gl_FragColor = vec4( color.rgb * bright, 1.0 );
}
