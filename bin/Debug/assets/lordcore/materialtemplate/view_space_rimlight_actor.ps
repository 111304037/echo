#version 100

precision mediump float;
#include <tonemapping.inc>
#include <fog_ps.inc>
#include <hdr_ldr.inc>

uniform vec4 _AmbientColor;
uniform vec4 _RimColor;
uniform float _RimIntensity;
uniform float _RimPower;
uniform vec3 _RimDirection;
uniform sampler2D Albedo;

#define AMBIENT_LIGHT     1
#define DIRECTIONAL_LIGHT 2
#define POINT_LIGHT     3

#ifdef ALPHA_TEST
	uniform float _AlphaTestValue;
#endif

#ifdef RIME_LIGHT
	#include <rime_light.inc>
	varying vec3 rimelight_viewDir;
#endif 

varying vec2 xlv_TEXCOORD0;
varying vec3 worldNormal;
varying vec3 viewNormal;
varying vec3 worldPos;

varying vec4 ofogColor;

#ifdef SPRITE_ANIMATION
	uniform sampler2D SA_sampler;
	varying vec2  SA_inTexCoord;
#endif

void main ()
{
	vec4 diffuseColor = texture2d_linear(Albedo, xlv_TEXCOORD0);
	
#ifdef ALPHA_TEST
	if(diffuseColor.a < _AlphaTestValue)
	{
		discard;
	}
#endif

	vec3 lightDir = normalize(vec3(_RimDirection));
	vec3 rimDir = lightDir;
	vec3 viewDir = vec3(0.0, 0.0, -1.0);
 
	vec3 normal = viewNormal;
	normal.y = 0.5;
	normal = normalize(normal);
	float MoN = max(0.0, dot(normal, rimDir));
	float MoVN = max(0.0, dot(viewNormal, rimDir));
	float MoV = max(0.0, dot(viewDir, rimDir));
  
	vec3 rimLight = diffuseColor.rgb * _RimColor.rgb * (pow(MoN*(1.0 - MoV), _RimPower) + pow(MoVN*(1.0 - MoV), _RimPower)) * _RimIntensity; 
	vec3 ambient = diffuseColor.rgb * _AmbientColor.rgb * 2.0;
	vec3 rimeColor = vec3(0.000001);
#ifdef SPRITE_ANIMATION
	vec4 sa_color = texture2d_linear(SA_sampler, SA_inTexCoord);
	//ambient= mix(ambient,sa_color.rgb,sa_color.a);
	ambient += sa_color.xyz;
#endif

#ifdef RIME_LIGHT
	rimeColor = calcRimeColor(viewNormal, rimelight_viewDir);
#endif

	vec3 diffuseResult = ambient + rimLight + rimeColor;
  
	vec4 finalColor;
	finalColor.w = 1.0;
	finalColor.rgb = diffuseResult;
  
	gl_FragColor = finalColor;

	gl_FragColor.xyz = mix(ofogColor.xyz, gl_FragColor.xyz, ofogColor.a);
	gl_FragColor.rgb = mix(gl_FragColor.rgb, varHeightFog.rgb, ComputeHeightFog(varHeightFog.a));

	gl_FragColor = hdr2ldr(gl_FragColor);
	gl_FragColor.rgb = max(vec3(0.0),gl_FragColor.rgb);
}

